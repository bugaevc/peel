cmake_minimum_required(VERSION 3.16)

find_package (Python3 REQUIRED)

set (peel_VERSION "@version@")
set (peel_LIBRARIES)
set (peel_INCLUDE_DIRS "@includedir@")
set (PEEL_GEN_MODULE "@peel_gen_path@")
mark_as_advanced (peel_VERSION peel_LIBRARIES peel_INCLUDE_DIRS PEEL_GEN_MODULE)

add_library (peel::peel INTERFACE IMPORTED)
set_property (TARGET peel::peel APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${peel_INCLUDE_DIRS}")

include (FindPackageHandleStandardArgs)
find_package_handle_standard_args (peel
  REQUIRED_VARS PEEL_GEN_MODULE peel_INCLUDE_DIRS
  VERSION_VAR peel_VERSION)

function (peel_generate GIR_NAME GIR_VERSION)
  # Parse our arguments.
  set (options RECURSIVE OPTIONAL GLOBAL)
  set (oneValueArgs GIR_FILE)
  set (multiValueArgs)
  cmake_parse_arguments (PEEL_GENERATE "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})

  set (gi_gir_path "$ENV{GI_GIR_PATH}")
  foreach (prefix_path IN LISTS CMAKE_PREFIX_PATH)
    file (TO_NATIVE_PATH "${prefix_path}" native_prefix_path)
    if ("${gi_gir_path}" STREQUAL "")
      set (sep)
    elseif (UNIX)
      set (sep ":")
    else ()
      set (sep ";")
    endif ()
    if (UNIX)
      set (gi_gir_path "${gi_gir_path}${sep}${native_prefix_path}/share/gir-1.0")
    else ()
      set (gi_gir_path "${gi_gir_path}${sep}${native_prefix_path}\\share\\gir-1.0")
    endif ()
  endforeach ()

  if (${PEEL_GENERATE_RECURSIVE})
    set (recursive_arg "--recursive")
  else ()
    set (recursive_arg)
  endif ()

  set (gen_dir "${CMAKE_CURRENT_BINARY_DIR}/peel-generated")
  file (MAKE_DIRECTORY "${gen_dir}")

  if (${CMAKE_VERSION} VERSION_LESS "3.27")
    set (depends_explicit_only)
  else ()
    set (depends_explicit_only DEPENDS_EXPLICIT_ONLY)
  endif ()
  if (${CMAKE_VERSION} VERSION_LESS "3.31")
    set (codegen_arg)
  else ()
    cmake_policy (SET CMP0171 NEW)
    set (codegen_arg CODEGEN)
  endif ()

  add_custom_command (OUTPUT "${gen_dir}/peel/${GIR_NAME}"
    COMMAND "${CMAKE_COMMAND}"
    ARGS
      "-E" "env" "GI_GIR_PATH=${gi_gir_path}"
      "${Python3_EXECUTABLE}" "${PEEL_GEN_MODULE}"
      ${recursive_arg} "${GIR_NAME}" "${GIR_VERSION}"
    DEPENDS "${PEEL_GEN_MODULE}"
    WORKING_DIRECTORY "${gen_dir}"
    VERBATIM ${depends_explicit_only} ${codegen_arg})

  add_custom_target (peel_generate_${GIR_NAME} DEPENDS "${gen_dir}/peel/${GIR_NAME}")

  add_library (peel::${GIR_NAME} INTERFACE IMPORTED)
  target_link_libraries (peel::${GIR_NAME} INTERFACE peel::peel)
  add_dependencies (peel::${GIR_NAME} peel_generate_${GIR_NAME})

  set_property (TARGET peel::${GIR_NAME} APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${gen_dir}")
endfunction (peel_generate)
